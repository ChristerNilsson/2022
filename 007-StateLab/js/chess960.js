// Generated by CoffeeScript 2.5.1
// Givet index räknar chess960 ut hur pjäserna ska stå.
// <= 0 index < 960
// 518 motsvarar normalt schack, dvs RNBQKBNR

// https://chess-tigers.de/download/chess960_regeln.pdf?PHPSESSID=d71dfe17e7e8aae16adce6f8fb284410
export var chess960 = function(index) { // 16 microsecs
  var B, B0, B1, N, N0, N1, Q, X, b0, b1, fillIn, five, getEmpty, n0, n1, q, six;
  [Q, N, B, X] = 'QNB_';
  N0 = [0, 0, 0, 0, 1, 1, 1, 2, 2, 3];
  N1 = [1, 2, 3, 4, 2, 3, 4, 3, 4, 4];
  B0 = [0, 2, 4, 6];
  B1 = [1, 3, 5, 7];
  getEmpty = function(arr) {
    arr = _.map(arr, function(value, index) {
      if (value === X) {
        return index;
      } else {
        return X;
      }
    });
    return _.filter(arr, function(value) {
      return value !== X;
    });
  };
  assert([0, 1, 3], getEmpty([X, X, N, X, N]));
  fillIn = function(piece, places, pieces) {
    var empty, i, j, k, len, len1, place, ref, res;
    res = new Array(places.length + pieces.length);
    _.fill(res, X);
    for (j = 0, len = places.length; j < len; j++) {
      place = places[j];
      res[place] = piece;
    }
    empty = getEmpty(res);
    ref = _.range(pieces.length);
    for (k = 0, len1 = ref.length; k < len1; k++) {
      i = ref[k];
      res[empty[i]] = pieces[i];
    }
    return res.join('');
  };
  assert('RNKNR', fillIn(N, [1, 3], 'RKR'));
  assert('RNQKNR', fillIn(Q, [2], 'RNKNR'));
  assert('RNBQKBNR', fillIn(B, [2, 5], 'RNQKNR'));
  q = Math.floor(index / 16) % 6;
  n0 = N0[Math.floor(index / 96) % 10];
  n1 = N1[Math.floor(index / 96) % 10];
  b0 = B0[Math.floor(index / 4) % 4];
  b1 = B1[index % 4];
  five = fillIn(N, [n0, n1], 'RKR');
  six = fillIn(Q, [q], five);
  return fillIn(B, [b0, b1], six);
};

assert("RNBQKBNR", chess960(518));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlc3M5NjAuanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcY2hlc3M5NjAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFJaUc7Ozs7O0FBRWpHLE9BQUEsSUFBTyxRQUFBLEdBQVcsUUFBQSxDQUFDLEtBQUQsQ0FBQSxFQUFBO0FBQ2xCLE1BQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsUUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBO0VBQUMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQUEsR0FBWTtFQUVaLEVBQUEsR0FBSyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVAsRUFBUyxDQUFULEVBQVcsQ0FBWCxFQUFhLENBQWIsRUFBZSxDQUFmLEVBQWlCLENBQWpCLEVBQW1CLENBQW5CO0VBQ0wsRUFBQSxHQUFLLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLEVBQU8sQ0FBUCxFQUFTLENBQVQsRUFBVyxDQUFYLEVBQWEsQ0FBYixFQUFlLENBQWYsRUFBaUIsQ0FBakIsRUFBbUIsQ0FBbkI7RUFDTCxFQUFBLEdBQUssQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQO0VBQ0wsRUFBQSxHQUFLLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLEVBQU8sQ0FBUDtFQUVMLFFBQUEsR0FBVyxRQUFBLENBQUMsR0FBRCxDQUFBO0lBQ1YsR0FBQSxHQUFNLENBQUMsQ0FBQyxHQUFGLENBQU0sR0FBTixFQUFXLFFBQUEsQ0FBQyxLQUFELEVBQU8sS0FBUCxDQUFBO01BQWlCLElBQUcsS0FBQSxLQUFPLENBQVY7ZUFBaUIsTUFBakI7T0FBQSxNQUFBO2VBQTRCLEVBQTVCOztJQUFqQixDQUFYO1dBQ04sQ0FBQyxDQUFDLE1BQUYsQ0FBUyxHQUFULEVBQWMsUUFBQSxDQUFDLEtBQUQsQ0FBQTthQUFXLEtBQUEsS0FBUztJQUFwQixDQUFkO0VBRlU7RUFHWCxNQUFBLENBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FBUCxFQUFnQixRQUFBLENBQVMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsQ0FBVCxDQUFULENBQWhCO0VBRUEsTUFBQSxHQUFTLFFBQUEsQ0FBQyxLQUFELEVBQU8sTUFBUCxFQUFjLE1BQWQsQ0FBQTtBQUNWLFFBQUEsS0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLEdBQUEsRUFBQTtJQUFFLEdBQUEsR0FBTSxJQUFJLEtBQUosQ0FBVSxNQUFNLENBQUMsTUFBUCxHQUFnQixNQUFNLENBQUMsTUFBakM7SUFDTixDQUFDLENBQUMsSUFBRixDQUFPLEdBQVAsRUFBVyxDQUFYO0lBQ0EsS0FBQSx3Q0FBQTs7TUFBQSxHQUFHLENBQUMsS0FBRCxDQUFILEdBQWE7SUFBYjtJQUNBLEtBQUEsR0FBUSxRQUFBLENBQVMsR0FBVDtBQUNSO0lBQUEsS0FBQSx1Q0FBQTs7TUFBQSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUQsQ0FBTixDQUFILEdBQWdCLE1BQU0sQ0FBQyxDQUFEO0lBQXRCO1dBQ0EsR0FBRyxDQUFDLElBQUosQ0FBUyxFQUFUO0VBTlE7RUFPVCxNQUFBLENBQVUsT0FBVixFQUFtQixNQUFBLENBQU8sQ0FBUCxFQUFVLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBVixFQUFpQixLQUFqQixDQUFuQjtFQUNBLE1BQUEsQ0FBUyxRQUFULEVBQW1CLE1BQUEsQ0FBTyxDQUFQLEVBQVUsQ0FBQyxDQUFELENBQVYsRUFBaUIsT0FBakIsQ0FBbkI7RUFDQSxNQUFBLENBQU8sVUFBUCxFQUFtQixNQUFBLENBQU8sQ0FBUCxFQUFVLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBVixFQUFpQixRQUFqQixDQUFuQjtFQUVBLENBQUEsY0FBSyxRQUFTLEdBQVQsR0FBYztFQUNuQixFQUFBLEdBQUssRUFBRSxZQUFDLFFBQVMsR0FBVCxHQUFjLEVBQWY7RUFDUCxFQUFBLEdBQUssRUFBRSxZQUFDLFFBQVMsR0FBVCxHQUFjLEVBQWY7RUFDUCxFQUFBLEdBQUssRUFBRSxZQUFDLFFBQVMsRUFBVCxHQUFhLENBQWQ7RUFDUCxFQUFBLEdBQUssRUFBRSxDQUFDLEtBQUEsR0FBUSxDQUFUO0VBRVAsSUFBQSxHQUFPLE1BQUEsQ0FBTyxDQUFQLEVBQVMsQ0FBQyxFQUFELEVBQUksRUFBSixDQUFULEVBQWlCLEtBQWpCO0VBQ1AsR0FBQSxHQUFPLE1BQUEsQ0FBTyxDQUFQLEVBQVMsQ0FBQyxDQUFELENBQVQsRUFBYSxJQUFiO1NBQ1AsTUFBQSxDQUFPLENBQVAsRUFBUyxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQVQsRUFBaUIsR0FBakI7QUFoQ2lCOztBQWlDbEIsTUFBQSxDQUFPLFVBQVAsRUFBbUIsUUFBQSxDQUFTLEdBQVQsQ0FBbkIiLCJzb3VyY2VzQ29udGVudCI6WyIjIEdpdmV0IGluZGV4IHLDpGtuYXIgY2hlc3M5NjAgdXQgaHVyIHBqw6RzZXJuYSBza2Egc3TDpS5cclxuIyA8PSAwIGluZGV4IDwgOTYwXHJcbiMgNTE4IG1vdHN2YXJhciBub3JtYWx0IHNjaGFjaywgZHZzIFJOQlFLQk5SXHJcblxyXG4jIGh0dHBzOi8vY2hlc3MtdGlnZXJzLmRlL2Rvd25sb2FkL2NoZXNzOTYwX3JlZ2Vsbi5wZGY/UEhQU0VTU0lEPWQ3MWRmZTE3ZTdlOGFhZTE2YWRjZTZmOGZiMjg0NDEwXHJcblxyXG5leHBvcnQgY2hlc3M5NjAgPSAoaW5kZXgpIC0+ICMgMTYgbWljcm9zZWNzXHJcblx0W1EsTixCLFhdID0gJ1FOQl8nXHJcblxyXG5cdE4wID0gWzAsMCwwLDAsMSwxLDEsMiwyLDNdXHJcblx0TjEgPSBbMSwyLDMsNCwyLDMsNCwzLDQsNF1cclxuXHRCMCA9IFswLDIsNCw2XVxyXG5cdEIxID0gWzEsMyw1LDddXHJcblxyXG5cdGdldEVtcHR5ID0gKGFycikgLT5cclxuXHRcdGFyciA9IF8ubWFwIGFyciwgKHZhbHVlLGluZGV4KSAtPiBpZiB2YWx1ZT09WCB0aGVuIGluZGV4IGVsc2UgWFxyXG5cdFx0Xy5maWx0ZXIgYXJyLCAodmFsdWUpIC0+IHZhbHVlICE9IFhcclxuXHRhc3NlcnQgWzAsMSwzXSwgZ2V0RW1wdHkgW1gsWCxOLFgsTl1cclxuXHJcblx0ZmlsbEluID0gKHBpZWNlLHBsYWNlcyxwaWVjZXMpIC0+XHJcblx0XHRyZXMgPSBuZXcgQXJyYXkgcGxhY2VzLmxlbmd0aCArIHBpZWNlcy5sZW5ndGhcclxuXHRcdF8uZmlsbCByZXMsWFxyXG5cdFx0cmVzW3BsYWNlXSA9IHBpZWNlIGZvciBwbGFjZSBpbiBwbGFjZXNcclxuXHRcdGVtcHR5ID0gZ2V0RW1wdHkgcmVzXHJcblx0XHRyZXNbZW1wdHlbaV1dID0gcGllY2VzW2ldIGZvciBpIGluIF8ucmFuZ2UgcGllY2VzLmxlbmd0aFxyXG5cdFx0cmVzLmpvaW4gJydcclxuXHRhc3NlcnQgICAgJ1JOS05SJywgZmlsbEluIE4sIFsxLDNdLCAnUktSJ1xyXG5cdGFzc2VydCAgICdSTlFLTlInLCBmaWxsSW4gUSwgWzJdLCAgICdSTktOUidcclxuXHRhc3NlcnQgJ1JOQlFLQk5SJywgZmlsbEluIEIsIFsyLDVdLCAnUk5RS05SJ1xyXG5cclxuXHRxICA9IGluZGV4IC8vIDE2ICUgNlxyXG5cdG4wID0gTjBbaW5kZXggLy8gOTYgJSAxMF1cclxuXHRuMSA9IE4xW2luZGV4IC8vIDk2ICUgMTBdXHJcblx0YjAgPSBCMFtpbmRleCAvLyA0ICUgNF1cclxuXHRiMSA9IEIxW2luZGV4ICUgNF1cclxuXHJcblx0Zml2ZSA9IGZpbGxJbiBOLFtuMCxuMV0sJ1JLUidcclxuXHRzaXggID0gZmlsbEluIFEsW3FdLGZpdmVcclxuXHRmaWxsSW4gQixbYjAsYjFdLHNpeFxyXG5hc3NlcnQgXCJSTkJRS0JOUlwiLCBjaGVzczk2MCA1MThcclxuIl19
//# sourceURL=c:\github\2022-007-StateLab\coffee\chess960.coffee