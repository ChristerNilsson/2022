// Generated by CoffeeScript 2.5.1
var prettyPair,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

export var globals = {};

globals.HOUR = 60 * 60 * 60; // tertier

globals.MINUTE = 60 * 60; // tertier

globals.SEC = 60; // tertier

globals.TOGGLE = 1; // 0=portrÃ¤tt (Android) 1=landskap (Mac)

globals.HEARTBEAT = 1000; // ms updates of localStorage

globals.FRAMERATE = 60; // 10

globals.states = {};

globals.settings = {};

globals.bits = {};

globals.backup = null;

globals.tw = 0;

globals.qr = null;

globals.sound = null;

globals.currState = null;

globals.diag = 0;

globals.os = '';

globals.chess = null;

globals.logg = [];

export var logg = function(prompt, value = '') {
  return globals.logg.push(`${prompt} ${JSON.stringify(value)}`);
};

export var pretty = function(tot) {
  var header, m, s, t;
  tot = Math.round(tot);
  t = modulo(tot, 60);
  tot = Math.floor(tot / 60);
  s = modulo(tot, 60);
  m = Math.floor(tot / 60);
  header = '';
  if (m > 0) {
    header += m + 'm';
  }
  if (s > 0) {
    header += s + 's';
  }
  if (t > 0) {
    header += t + 't';
  }
  return header;
};

assert('1m1t', pretty(3601));

assert('2s3t', pretty(123));

assert('60m30s', pretty(60 * 60 * 60 + 30 * 60));

prettyPair = function(a, b) {
  var separator;
  separator = pretty(b) !== '' ? ' + ' : '';
  return pretty(a) + separator + pretty(b);
};

assert('1m1t + 2s3t', prettyPair(3601, 123));

export var d2 = function(x) {
  x = Math.trunc(x);
  if (x < 10) {
    return '0' + x;
  } else {
    return x;
  }
};

assert('03', d2(3));

export var mst = function(x) { // tertier
  var m, s, t;
  t = modulo(x, 60);
  x = Math.floor(x / 60);
  s = modulo(x, 60);
  m = Math.floor(x / 60);
  return [m, s, t];
};

assert([3, 0, 0], mst(3 * 60 * 60));

assert([3, 0, 30], mst(180 * 60 + 30));

export var getOrange = function() {
  var g, gs, gsp;
  g = globals;
  gs = g.settings;
  gs.makeHandicap();
  gsp = gs.players;
  if (g.bits.handicap.nr === 0) {
    return '';
  } else {
    return prettyPair(gsp[0][0], gsp[0][1]);
  }
};

export var getWhite = function() {
  return globals.settings.compact();
};

export var getGreen = function() {
  var g, gs, gsp;
  g = globals;
  gs = g.settings;
  gs.makeHandicap();
  gsp = gs.players;
  if (g.bits.handicap.nr === 0) {
    return '';
  } else {
    return prettyPair(gsp[1][0], gsp[1][1]);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFscy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxnbG9iYWxzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxVQUFBO0VBQUE7O0FBQUEsT0FBQSxJQUFPLE9BQUEsR0FBVSxDQUFBOztBQUVqQixPQUFPLENBQUMsSUFBUixHQUFpQixFQUFBLEdBQUcsRUFBSCxHQUFNLEdBRnZCOztBQUdBLE9BQU8sQ0FBQyxNQUFSLEdBQWlCLEVBQUEsR0FBRyxHQUhwQjs7QUFJQSxPQUFPLENBQUMsR0FBUixHQUFpQixHQUpqQjs7QUFNQSxPQUFPLENBQUMsTUFBUixHQUFpQixFQU5qQjs7QUFPQSxPQUFPLENBQUMsU0FBUixHQUFvQixLQVBwQjs7QUFTQSxPQUFPLENBQUMsU0FBUixHQUFvQixHQVRwQjs7QUFVQSxPQUFPLENBQUMsTUFBUixHQUFpQixDQUFBOztBQUNqQixPQUFPLENBQUMsUUFBUixHQUFvQixDQUFBOztBQUNwQixPQUFPLENBQUMsSUFBUixHQUFlLENBQUE7O0FBQ2YsT0FBTyxDQUFDLE1BQVIsR0FBaUI7O0FBRWpCLE9BQU8sQ0FBQyxFQUFSLEdBQWE7O0FBQ2IsT0FBTyxDQUFDLEVBQVIsR0FBYTs7QUFDYixPQUFPLENBQUMsS0FBUixHQUFnQjs7QUFDaEIsT0FBTyxDQUFDLFNBQVIsR0FBb0I7O0FBQ3BCLE9BQU8sQ0FBQyxJQUFSLEdBQWU7O0FBQ2YsT0FBTyxDQUFDLEVBQVIsR0FBYTs7QUFDYixPQUFPLENBQUMsS0FBUixHQUFnQjs7QUFDaEIsT0FBTyxDQUFDLElBQVIsR0FBZTs7QUFFZixPQUFBLElBQU8sSUFBQSxHQUFPLFFBQUEsQ0FBQyxNQUFELEVBQVEsUUFBTSxFQUFkLENBQUE7U0FDYixPQUFPLENBQUMsSUFBSSxDQUFDLElBQWIsQ0FBa0IsQ0FBQSxDQUFBLENBQUcsTUFBSCxFQUFBLENBQUEsQ0FBYSxJQUFJLENBQUMsU0FBTCxDQUFlLEtBQWYsQ0FBYixDQUFBLENB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LEdBQVcsUUFBQSxDQUFBLENBQUE7U0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLE9BQWpCLENBQUE7QUFBSDs7QUFFbEIsT0FBQSxJQUFPLFFBQUEsR0FBVyxRQUFBLENBQUEsQ0FBQTtBQUNsQixNQUFBLENBQUEsRUFBQSxFQUFBLEVBQUE7RUFBQyxDQUFBLEdBQUk7RUFDSixFQUFBLEdBQUssQ0FBQyxDQUFDO0VBQ1AsRUFBRSxDQUFDLFlBQUgsQ0FBQTtFQUNBLEdBQUEsR0FBTSxFQUFFLENBQUM7RUFDVCxJQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQWhCLEtBQXNCLENBQXpCO1dBQWdDLEdBQWhDO0dBQUEsTUFBQTtXQUF3QyxVQUFBLENBQVcsR0FBRyxDQUFDLENBQUQsQ0FBRyxDQUFDLENBQUQsQ0FBakIsRUFBc0IsR0FBRyxDQUFDLENBQUQsQ0FBRyxDQUFDLENBQUQsQ0FBNUIsRUFBeEM7O0FBTGlCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGdsb2JhbHMgPSB7fVxyXG5cclxuZ2xvYmFscy5IT1VSICAgPSA2MCo2MCo2MCAjIHRlcnRpZXJcclxuZ2xvYmFscy5NSU5VVEUgPSA2MCo2MCAgICAjIHRlcnRpZXJcclxuZ2xvYmFscy5TRUMgICAgPSA2MCAgICAgICAjIHRlcnRpZXJcclxuXHJcbmdsb2JhbHMuVE9HR0xFID0gMSAjIDA9cG9ydHLDpHR0IChBbmRyb2lkKSAxPWxhbmRza2FwIChNYWMpXHJcbmdsb2JhbHMuSEVBUlRCRUFUID0gMTAwMCAjIG1zIHVwZGF0ZXMgb2YgbG9jYWxTdG9yYWdlXHJcblxyXG5nbG9iYWxzLkZSQU1FUkFURSA9IDYwICMgMTBcclxuZ2xvYmFscy5zdGF0ZXMgPSB7fVxyXG5nbG9iYWxzLnNldHRpbmdzICA9IHt9XHJcbmdsb2JhbHMuYml0cyA9IHt9XHJcbmdsb2JhbHMuYmFja3VwID0gbnVsbFxyXG5cclxuZ2xvYmFscy50dyA9IDBcclxuZ2xvYmFscy5xciA9IG51bGxcclxuZ2xvYmFscy5zb3VuZCA9IG51bGxcclxuZ2xvYmFscy5jdXJyU3RhdGUgPSBudWxsXHJcbmdsb2JhbHMuZGlhZyA9IDBcclxuZ2xvYmFscy5vcyA9ICcnXHJcbmdsb2JhbHMuY2hlc3MgPSBudWxsXHJcbmdsb2JhbHMubG9nZyA9IFtdXHJcblxyXG5leHBvcnQgbG9nZyA9IChwcm9tcHQsdmFsdWU9JycpIC0+XHJcblx0Z2xvYmFscy5sb2dnLnB1c2ggXCIje3Byb21wdH0gI3tKU09OLnN0cmluZ2lmeSB2YWx1ZX1cIlxyXG5cclxuZXhwb3J0IHByZXR0eSA9ICh0b3QpIC0+XHJcblx0dG90ID0gTWF0aC5yb3VuZCB0b3RcclxuXHR0ID0gdG90ICUlIDYwXHJcblx0dG90IC8vPSA2MFxyXG5cdHMgPSB0b3QgJSUgNjBcclxuXHRtID0gdG90IC8vIDYwXHJcblx0aGVhZGVyID0gJydcclxuXHRpZiBtID4gMCB0aGVuIGhlYWRlciArPSBtICsgJ20nXHJcblx0aWYgcyA+IDAgdGhlbiBoZWFkZXIgKz0gcyArICdzJ1xyXG5cdGlmIHQgPiAwIHRoZW4gaGVhZGVyICs9IHQgKyAndCdcclxuXHRoZWFkZXJcclxuYXNzZXJ0ICcxbTF0JywgcHJldHR5IDM2MDFcclxuYXNzZXJ0ICcyczN0JywgcHJldHR5IDEyM1xyXG5hc3NlcnQgJzYwbTMwcycsIHByZXR0eSA2MCo2MCo2MCszMCo2MFxyXG5cclxucHJldHR5UGFpciA9IChhLGIpIC0+IFxyXG5cdHNlcGFyYXRvciA9IGlmIHByZXR0eShiKSAhPSAnJyB0aGVuICcgKyAnIGVsc2UgJydcclxuXHRwcmV0dHkoYSkgKyBzZXBhcmF0b3IgKyBwcmV0dHkoYilcclxuYXNzZXJ0ICcxbTF0ICsgMnMzdCcsIHByZXR0eVBhaXIgMzYwMSwxMjNcclxuXHJcbmV4cG9ydCBkMiA9ICh4KSAtPlxyXG5cdHggPSBNYXRoLnRydW5jIHhcclxuXHRpZiB4IDwgMTAgdGhlbiAnMCcreCBlbHNlIHhcclxuYXNzZXJ0ICcwMycsIGQyIDNcclxuXHJcbmV4cG9ydCBtc3QgPSAoeCkgLT4gIyB0ZXJ0aWVyXHJcblx0dCA9IHggJSUgNjBcclxuXHR4IC8vPSA2MFxyXG5cdHMgPSB4ICUlIDYwXHJcblx0bSA9IHggLy8gNjBcclxuXHRbbSxzLHRdIFxyXG5hc3NlcnQgWzMsMCwwXSwgbXN0IDMqNjAqNjBcclxuYXNzZXJ0IFszLDAsMzBdLCBtc3QgMTgwKjYwKzMwXHJcblxyXG5leHBvcnQgZ2V0T3JhbmdlID0gLT5cclxuXHRnID0gZ2xvYmFsc1xyXG5cdGdzID0gZy5zZXR0aW5nc1xyXG5cdGdzLm1ha2VIYW5kaWNhcCgpXHJcblx0Z3NwID0gZ3MucGxheWVyc1xyXG5cdGlmIGcuYml0cy5oYW5kaWNhcC5uciA9PSAwIHRoZW4gJycgZWxzZSBwcmV0dHlQYWlyIGdzcFswXVswXSwgZ3NwWzBdWzFdXHJcblxyXG5leHBvcnQgZ2V0V2hpdGUgPSAtPiBnbG9iYWxzLnNldHRpbmdzLmNvbXBhY3QoKVxyXG5cclxuZXhwb3J0IGdldEdyZWVuID0gLT4gXHJcblx0ZyA9IGdsb2JhbHNcclxuXHRncyA9IGcuc2V0dGluZ3NcclxuXHRncy5tYWtlSGFuZGljYXAoKVxyXG5cdGdzcCA9IGdzLnBsYXllcnNcclxuXHRpZiBnLmJpdHMuaGFuZGljYXAubnIgPT0gMCB0aGVuICcnIGVsc2UgcHJldHR5UGFpciBnc3BbMV1bMF0sIGdzcFsxXVsxXVxyXG4iXX0=
//# sourceURL=c:\github\2022-007-StateLab\coffee\globals.coffee